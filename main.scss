$primary-color: #369;
$margin: 5px;
$padding: $margin * 1.5;


body {
  background: $primary-color;
}

.blog {
  > h1 {
    color: red;
    border: 1px solid red;
  }
  .entry {
    background: white;
    margin: $margin;
    padding: $padding;
    h1 {
      font-size: 20px;
      color: blue;
      margin: $margin 0 0 $margin;
    }
    p {
      font-size: 12px;
      margin: 20px;
      html.csscolumns & {
        column-count: 2;
        column-gap: 10px;
        margin: 10px;
      }
    }
    a {
      color: red;
      &:hover {
        color: blue;
      }
    }
    .date {
      font-size: 0.3em;
      color: $primary-color;
    }
    a {
      color: $primary-color;
    }
  }
}

/* MIXIN EXAMPLE */

/* create mixin here */

// @mixin roundy {
//   border-radius: 4px;
//   border-top-right-radius: 8px;
//   border-bottom-left-radius: 8px;
// }

@mixin roundy($radius, $color) {
  border-radius: $radius;
  border-top-right-radius: $radius * 2;
  border-bottom-left-radius: $radius * 2;
  a {
    color: $color;
  }
}


/*then include in classes you wish */

.box {
  @include roundy(4px, blue);
}

.button {
  @include roundy(2px, red);
  background: #345;
}

// -- both classes get the attributes from the mixin --//


/* EXTEND EXAMPLE------
extends allow you to extend the attributes from one class or id into another selector. % symbols are used to create a placeholder class to reference, i.e. a variable to use in extends */

%bar {
  height: 14px;
  font-size: 10px;
  > div {
    float: left;
    clear: none;
  }
}

.menu {
  @extend %bar;
  background: #345;
}

.nav {
  @extend %bar;
}

/* IMPORT EXAMPLE-----
When working on a large site, we want to use more than one style sheet to keep things organized and easier to follow-*/

@import "_variables.scss";  //Sass knows that if there's an underscore, don't generate a CSS file to match it. Then we can use that file to just define all of the variables, for example, and import it into our main sass file" //

@import "_globals.scss"; // Stylesheet just for global styles */

@import "_mixins.scss";

//Often the main.scss stylesheet will be mostly full of imports from other scss files //

@import "_reset.scss";
//****RESET CSS**** -- copy reset css file code from the internet and make a new scss file called _reset.scss, then import it into main. This takes away lots of default styles inherited from browsers //


// SASS FUNCITONS ___________________________//
$color: orange;

@function pxify($value) {
  @return unquote($value + "px");
}


  div {
    height: 100px;
    width: 255px;
    border: 1px solid black;
  }

  .color {
    background: $color;
  }

  .red, .blue, .green {
    float: left;
  }

  .red {
    background: red;
    width: pxify(red($color));
  }

  .blue {
    background: blue;
    width: pxify(blue($color));
  }

  .green {
    background: green;
    width: pxify(green($color));
  }

  /* Interpolation  and IF/ELSE Example -----------------------*/

  // .#{$color} is equivalent to + $color + //

  @mixin color_class($color) {
    .#{$color} {
      color: $color;
      background-image: url("images/#{$color}.jpg");
      @if $color == red {
        border: 1px solid black;
      }
    }
  }

  @mixin box($width) {
    @if $width > 100px {
      padding: 0px;
    } @else if $width == 100px {
      padding: 5px;
    }
    @else {
      padding: 10px;
    }
  }

  div {
    @include box(100px);
  }

  @include color_class(blue);
  @include color_class(green);
  @include color_class(green);


/* FOR/EACH loops EXAMPLE with advanced mixin-----------------------*/

.box {
  width: 100%;
  height: 10px;
  border: 1px solid black;
}

@for $i from 1 through 100 { //number of .box divs //
  .box:nth-child(#{$i}) {
    background: darken(white, $i);
  }
}

/* */

@mixin box($size: 10px, $color: black, $display: block) {
  width: $size;
  height: $size;
  background: $color;
  display: $display;
}

.box {
  @include box($display: inline);
}


@mixin band($name, $members...) {
  @each $member in $members {
    .#{name}.#{$member} {
      background: url("images/#{$name}/#{$member}.jpg");
    }
  }
}


@include band(radiohead, thom, jonny, colin, phil);
@include band(nin, trent);





/* Tells the computer to use the css columns stuff */
/* This is not super important to understand yet*/

html.csscolumns {
  .blog .entry p{
    column-count: 2;
    column-gap: 10px;
    margin: 10px;
  }
}
